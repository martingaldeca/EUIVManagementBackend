# Generated by Django 3.0.5 on 2020-05-01 15:59

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('EUIVSaveGame', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
        ('EUIVCountries', '0002_populate_countries_database'),
    ]

    operations = [
        migrations.CreateModel(
            name='EuIVUserActiveGames',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Datetime when de object was created.', null=True, verbose_name='Creation datetime')),
                ('modification_datetime', models.DateTimeField(auto_now=True, db_index=True, help_text='Datetime of the last object modification.', null=True, verbose_name='Modification datetime')),
                ('country', models.ForeignKey(blank=True, help_text='Country used by the user in the save game.', null=True, on_delete=django.db.models.deletion.CASCADE, to='EUIVCountries.EuIVCountry', verbose_name='Country')),
                ('save_game', models.ForeignKey(blank=True, help_text='The Save game associated to the user.', null=True, on_delete=django.db.models.deletion.CASCADE, to='EUIVSaveGame.EuIVSaveGame', verbose_name='Save game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EuIVUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Datetime when de object was created.', null=True, verbose_name='Creation datetime')),
                ('modification_datetime', models.DateTimeField(auto_now=True, db_index=True, help_text='Datetime of the last object modification.', null=True, verbose_name='Modification datetime')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_active_games', models.ManyToManyField(help_text='All the games active where the user is playing.', related_name='active_games', through='EUIVUserManagement.EuIVUserActiveGames', to='EUIVSaveGame.EuIVSaveGame', verbose_name='User active games')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EuIVUserProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Datetime when de object was created.', null=True, verbose_name='Creation datetime')),
                ('modification_datetime', models.DateTimeField(auto_now=True, db_index=True, help_text='Datetime of the last object modification.', null=True, verbose_name='Modification datetime')),
                ('user_type', models.IntegerField(blank=True, choices=[(0, 'host'), (1, 'admin'), (2, 'player')], default=2, help_text='Select one of the user types for the platform.', null=True, verbose_name='User type')),
                ('first_login', models.BooleanField(default=True, help_text='Field that show if the user has logged in the platform any time or not.', verbose_name='First login')),
                ('user_avatar', models.ImageField(blank=True, default='Avatars/defaultUser.jpg', help_text='The user avatar image.', null=True, upload_to='Avatars/', verbose_name='Avatar')),
                ('user', models.OneToOneField(help_text='User associated to the user profile.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='euivuseractivegames',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User associated to the save game', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
    ]
