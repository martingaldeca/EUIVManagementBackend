# Generated by Django 3.0.5 on 2020-04-12 21:51

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EuIVPathConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Datetime when de object was created.', null=True, verbose_name='Creation datetime')),
                ('modification_datetime', models.DateTimeField(auto_now=True, db_index=True, help_text='Datetime of the last object modification.', null=True, verbose_name='Modification datetime')),
                ('euiv_path', models.CharField(blank=True, db_index=True, help_text='Savegame path in your computer.', max_length=500, unique=True, verbose_name='EUIV savegame path')),
            ],
            options={
                'verbose_name': 'Path config',
            },
        ),
        migrations.CreateModel(
            name='EuIVSaveGame',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creation_datetime', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Datetime when de object was created.', null=True, verbose_name='Creation datetime')),
                ('modification_datetime', models.DateTimeField(auto_now=True, db_index=True, help_text='Datetime of the last object modification.', null=True, verbose_name='Modification datetime')),
                ('savegame_file', models.CharField(blank=True, db_index=True, help_text='Savegame file in your computer.', max_length=500, unique=True, verbose_name='EUIV savegame file')),
                ('savegame_lines', models.IntegerField(default=-1, help_text='Number of total lines in the savegame.', verbose_name='Savegame lines')),
                ('savegame_size', models.FloatField(default=-1, help_text='Size in MB of the savegame.', verbose_name='Savegame size (MB)')),
                ('savegame_name', models.CharField(db_index=True, default='Savegame name', help_text='The name of the savegame to use.', max_length=50, verbose_name='Savegame name')),
                ('savegame_description', models.CharField(blank=True, help_text='The description of the savegame.', max_length=300, null=True, verbose_name='Savegame description')),
                ('savegame_date', models.DateField(blank=True, db_index=True, help_text='Current date in the savegame.', null=True, verbose_name='Savegame date')),
                ('savegame_dlc_enabled', models.CharField(blank=True, help_text='List of dlcs enabled in the savegame.', max_length=1000, null=True, verbose_name='DLC enabled')),
                ('savegame_is_multi_player', models.BooleanField(blank=True, db_index=True, help_text='Boolean that indicate if the savegame is a multi player game.', null=True, verbose_name='Multiplayer')),
                ('savegame_checksum', models.CharField(blank=True, help_text='Checksum of the savegame.', max_length=100, null=True, verbose_name='Savegame Checksum')),
                ('active', models.BooleanField(db_index=True, default=False, help_text='Field that indicates if the savegame is been playing right now.', verbose_name='Active')),
                ('check_time', models.FloatField(default=600, help_text='The time to wait until the next check in seconds (from 5 minutes to 1 hour)', validators=[django.core.validators.MinValueValidator(300), django.core.validators.MaxValueValidator(3600)], verbose_name='Check time')),
                ('euiv_path', models.ForeignKey(help_text='The path where the savegame is stored.', on_delete=django.db.models.deletion.CASCADE, to='EUIVSaveGame.EuIVPathConfig', verbose_name='Savegames path.')),
            ],
            options={
                'verbose_name': 'Save game',
            },
        ),
    ]
